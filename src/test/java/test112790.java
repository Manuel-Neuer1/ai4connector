import java.sql.*;

public class test112790 {
    public static void main(String[] args) throws SQLException {
        String url1 = "jdbc:mysql://localhost:3306/test?user=root&password=1234";
        String url2 = "jdbc:oceanbase://49.52.27.61:2881/test?user=root@test&password=1234&allowMultiQueries=false";
        String url3 = "jdbc:mariadb://localhost:3306/test?user=root&password=1234";
        /*
        * 在批处理中的插入语句中，显式指定了主键值（2 和 3）。
        * 根据 JDBC 规范，getGeneratedKeys() 方法主要用于获取数据库自动生成的主键值（例如使用 AUTO_INCREMENT 的字段）。
        * 对于显式指定的主键值，getGeneratedKeys() 的行为是未定义的，通常不会返回这些值。
        *
        * The primary key values (2 and 3) are explicitly specified in the insert statement in the batch.
        * According to the JDBC specification, the getGeneratedKeys() method is primarily used to obtain primary key values that are automatically generated by the database (e.g., fields that use AUTO_INCREMENT).
        * For explicitly specified primary key values, the behavior of getGeneratedKeys() is undefined, and it is not typically used to return these values.
        * */
        Connection con = DriverManager.getConnection(url2);

        Statement stmt = con.createStatement();
        stmt.executeUpdate("DROP TABLE IF EXISTS table0_0;");
        stmt.executeUpdate("CREATE TABLE table0_0(id INT AUTO_INCREMENT PRIMARY KEY,value INT);");
        stmt.executeUpdate("INSERT INTO table0_0 (value) VALUES(667711856)", Statement.RETURN_GENERATED_KEYS);
        stmt.addBatch("INSERT INTO table0_0 VALUES(2, -179653912)");
        stmt.addBatch("INSERT INTO table0_0 VALUES(3, 1207965915)");
        stmt.executeBatch();
        //stmt.executeUpdate("INSERT INTO table0_0 (value) VALUES(667711856)", Statement.RETURN_GENERATED_KEYS);


        ResultSet rs = stmt.getGeneratedKeys();
        while (rs.next()) {
            System.out.println(rs.getInt(1));
        }
    }
}

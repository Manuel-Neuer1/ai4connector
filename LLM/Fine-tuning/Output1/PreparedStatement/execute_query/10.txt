// seed seems not equal somewhere
// seed: 1743407010969

Connection con = null;
Statement stmt = null;
ResultSet rs = null;
Savepoint sp = null;
// con = DriverManager.getConnection("jdbc:mariadb://localhost:3366/test3768?user=root&password=123456&useServerPrepStmts=true&allowMultiQueries=true&cacheCallableStmts=true");
con = DriverManager.getConnection("jdbc:mysql://localhost:3366/test3768?user=root&password=123456&useServerPrepStmts=true&allowMultiQueries=true&cacheCallableStmts=true");
stmt = con.createStatement(1003, 1008, 2);
System.out.println(con.isReadOnly());
System.out.println(stmt.executeUpdate("CREATE TABLE table3768_0(id DOUBLE PRIMARY KEY,value DECIMAL);", 1));
stmt = con.prepareStatement("SELECT table3768_0.id FROM table3768_0 WHERE table3768_0.id > ?", 1003, 1008, 1);
stmt.setQueryTimeout(853264329);
stmt.setObject(1, "0.7784404285639425");


System.out.println("ERROR:");
try {
	stmt.executeQuery();
} catch (Exception e) {
	System.out.println(e);
}
stmt.setObject(1, "0.2441564649965341");

stmt.clearParameters();
// rs.setFetchDirection(1002);

// stmt.setObject(1, "0.057334679407250455");

stmt.setObject(1, "0.7626496710976166");


System.out.println("ERROR:");
try {
	stmt.execute();
} catch (Exception e) {
	System.out.println(e);
}
// stmt.setObject(1, "0.5393584379006063");

stmt.setObject(1, "0.6384999832415348");

stmt.addBatch();
try {
	stmt.addBatch("DELETE FROM table3768_0 WHERE (table3768_0.value < 0.09978156151329487);");
} catch (Exception e) {
	System.out.println(e);
}

System.out.println("ERROR:");
try {
	stmt.executeBatch();
} catch (Exception e) {
	System.out.println(e);
}

System.out.println("ERROR:");
// System.out.println(rs.next());


System.out.println("ERROR:");
try {

} catch (Exception e) {
	System.out.println(e);
}
System.out.println(stmt.getResultSetConcurrency());

System.out.println("ERROR:");
try {
	System.out.println(stmt.executeUpdate("DELETE FROM table3768_0 WHERE (table3768_0.id <> 0.262145204460839);", 2));
} catch (Exception e) {
	System.out.println(e);
}

System.out.println("ERROR:");
// rs.setFetchSize(604245450);

System.out.println(stmt.getResultSetType());

System.out.println("ERROR:");
try {

} catch (Exception e) {
	System.out.println(e);
}

System.out.println("ERROR:");
try {

} catch (Exception e) {
	System.out.println(e);
}
// System.out.println(rs.rowUpdated());


System.out.println("ERROR:");
try {
	rs = stmt.executeQuery("SELECT id, value FROM table3768_0;");
} catch (Exception e) {
	System.out.println(e);
}
System.out.println(stmt.getResultSetConcurrency());
try {
	con.rollback(null);
} catch (Exception e) {
	System.out.println(e);
}
System.out.println(rs.next());
System.out.println(rs.isLast());

System.out.println("ERROR:");
try {
	rs = stmt.executeQuery("SELECT id, value FROM table3768_0;");
} catch (Exception e) {
	System.out.println(e);
}
// con.setAutoCommit(false);
con.setAutoCommit(true);
System.out.println(stmt.getLargeUpdateCount());
System.out.println(rs.next());

System.out.println("ERROR:");
try {
	rs.getHoldability();
} catch (Exception e) {
	System.out.println(e);
}
try {
	rs.setFetchDirection(1001);
} catch (Exception e) {
	System.out.println(e);
}

System.out.println("ERROR:");
try {
	rs = stmt.executeQuery("SELECT id, value FROM table3768_0;");
} catch (Exception e) {
	System.out.println(e);
}
System.out.println(con.getHoldability());
System.out.println(rs.isLast());
System.out.println(rs.next());

System.out.println("ERROR:");
try {
	rs = stmt.executeQuery("SELECT id, value FROM table3768_0 WHERE (table3768_0.id > 0.2813737137478901);");
} catch (Exception e) {
	System.out.println(e);
}
con.setAutoCommit(false);
System.out.println(rs.next());
try {
	rs.setFetchDirection(1001);
} catch (Exception e) {
	System.out.println(e);
}
System.out.println(stmt.getLargeUpdateCount());

System.out.println("ERROR:");
try {
	rs.beforeFirst();
} catch (Exception e) {
	System.out.println(e);
}
System.out.println(rs.next());
try {
	rs.rowDeleted();
} catch (Exception e) {
	System.out.println(e);
}
System.out.println(rs.isFirst());
con.close();
stmt.close();
stmt.close();
stmt.close();
rs.close();
rs.close();
rs.close();
rs.close();
rs.close();
rs.close();
rs.close();
rs.close();
rs.close();
